name: Deploy

on:
    push:
    workflow_dispatch:

jobs:
    deploy:
        name: Build and Deploy
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  check-latest: true
                  registry-url: https://registry.npmjs.org/
            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false
            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-
            - name: Install dependencies
              run: pnpm install --frozen-lockfile --strict-peer-dependencies
            - name: Build
              run: pnpm run build
            - name: Deploy via SCP
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  port: ${{ secrets.SERVER_PORT }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.ED_KEY }}
                  source: "dist"
                  target: "/var/www"
            - name: Run shell script
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  port: ${{ secrets.SERVER_PORT }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.ED_KEY }}
                  script_stop: true
                  script: |
                      cd /var/www
                      ./deploy.sh gifconverter
